i = 5
cName <- subset[reg,1] #Regulator name
cName
stringVec <- unlist(strsplit(as.character(subset[reg, i ]), ","))
stringVec <- gsub(" ", "", stringVec,fixed=TRUE)
stringVec <- unique(stringVec) # Parse regulator genes
targetNumber <- length(stringVec) # Number of molecules in regulator
targetNumber
stringVec
#for (reg in 1:nrow(subset)){ # Each row of file
reg = 4
i = 5
cName <- subset[reg,1] #Regulator name
#stringVec <- unlist(strsplit(subset[reg,ncol(subset)], ","))
stringVec <- unlist(strsplit(as.character(subset[reg, i ]), ","))
stringVec <- gsub(" ", "", stringVec,fixed=TRUE)
stringVec <- unique(stringVec) # Parse regulator genes
targetNumber <- length(stringVec) # Number of molecules in regulator
targetNumber
cName
targetNumber
stringVec
################################################################
#   Differential expression analysis with limma
library(Biobase)
library(GEOquery)
library(limma)
# load series and platform data from GEO
gset <- getGEO("GSE36133", GSEMatrix =TRUE, AnnotGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL15308", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# group names for all samples
gsms <- paste0("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXX1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXX0000000000XXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX11XXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXX00000X00X000XXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXX")
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# log2 transform
ex <- exprs(gset)
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0) ||
(qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)
if (LogC) { ex[which(ex <= 0)] <- NaN
exprs(gset) <- log2(ex) }
# set up the data and proceed with analysis
sml <- paste("G", sml, sep="")    # set group names
fl <- as.factor(sml)
gset$description <- fl
design <- model.matrix(~ description + 0, gset)
colnames(design) <- levels(fl)
fit <- lmFit(gset, design)
cont.matrix <- makeContrasts(G1-G0, levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=250)
tT <- subset(tT, select=c("ID","adj.P.Val","P.Value","t","B","logFC","ORF"))
head(tT)
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
# load series and platform data from GEO
gset <- getGEO("GSE36133", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL15308", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# group names for all samples in a series
gsms <- paste0("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXX1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXX0000000000XXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX11XXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXX00000X00X000XXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXX")
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
sml <- paste("G", sml, sep="")  # set group names
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("SSCC","others")
# set parameters and draw the plot
palette(c("#f4dff4","#dff4e4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
length(sel)
gsms
sml
# eliminate samples marked as "X"
sel <- which(sml != "X")
sel
sml
# eliminate samples marked as "X"
sel <- which(sml != "GX")
length(sel)
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("SSCC","others")
# set parameters and draw the plot
palette(c("#f4dff4","#dff4e4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
dim(ex)
head(ex)
save(ex, "x:/project2020/MustARD/ESCC/workingWithMicroarray_GSE36133_CCLE/ESCC_GSE36133.rda")
save(ex, file= "x:/project2020/MustARD/ESCC/workingWithMicroarray_GSE36133_CCLE/ESCC_GSE36133.rda")
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
##===================================================================================================
##  Mutect2 calls vs merged normals  (10 samples)
##  gtx/GINKGO/callingAgainstMergeNormals/
##  X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals/MutSig
##===================================================================================================
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals_no_PON//MutSig/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
total<- rowSums(mut_mat)
mut_mat_GBE_mutect2_w_mergedNormal <- cbind(mut_mat, total)
plot_96_profile(mut_mat_GBE_mutect2_w_mergedNormal)
plot_96_profile(mut_mat_GBE_mutect2_w_mergedNormal)
plot_96_profile(mut_mat)
##===================================================================================================
fileExt  = "_w_mergedMale_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/with_MergedNormals/MutSig/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
dev.off()
plot_96_profile(mut_mat)
plot_96_profile(mut_mat_GBE_mutect2_w_mergedNormal)
##      fileExt : fileExtension
##==================================================
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
##===================================================================================================
##  Mutect2 calls vs merged normals  (10 samples)
##  gtx/GINKGO/callingAgainstMergeNormals/
##  X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals/MutSig
##===================================================================================================
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals_no_PON//MutSig/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
total<- rowSums(mut_mat)
mut_mat_GBE_mutect2_w_mergedNormal <- cbind(mut_mat, total)
plot_96_profile(mut_mat_GBE_mutect2_w_mergedNormal)
merged.call <-  read_vcfs_as_granges ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_finalSNV.vcf", "MergedGBE", ref_genome)
merged.call <-  read_vcfs_as_granges ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_finalSNV.vcf", "MergedGBE", ref_genome)
##==================================================
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
merged.call <-  read_vcfs_as_granges ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_finalSNV.vcf", "MergedGBE", ref_genome)
mut_mat <- mut_matrix(vcf_list = merged.call, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
spectrumDT <- list (f = merged.call, dat = mut_mat)
plot_96_profile(mut_mat)
##===================================================================================================
##  Mutect2 calls vs merged normals  (10 samples)
##  gtx/GINKGO/callingAgainstMergeNormals/
##  X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals/MutSig
##===================================================================================================
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals_no_PON//MutSig/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
total<- rowSums(mut_mat)
merged.call <-  read_vcfs_as_granges ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_finalSNV.vcf", "MergedGBE", ref_genome)
merged.mut_mat <- mut_matrix(vcf_list = merged.call, ref_genome = ref_genome)
spectrumDT <- list (f = merged.call, dat = merged.mut_mat)
plot_96_profile(merged.mut_mat)
mut_mat_GBE_mutect2_w_mergedNormal <- cbind(mut_mat, total, merged.mut_mat)
plot_96_profile(mut_mat_GBE_mutect2_w_mergedNormal)
colSums(mut_mat)
colSums(merged.mut_mat)
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/callingAgainstExonsOnly"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/callingAgainstExonsOnly/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
missense.with_SingleNormal <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/with_MergedNormals/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_SingleNormal.genes <- as.character(missense.with_SingleNormal$V1)
missense.with_MergedNormal <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_MergedNormal.genes <- as.character(missense.with_MergedNormal$V1)
missense.with_Mutect1 <- read.table ("X:/project2020/exomeSeq/shareDataWIllumina/examineVariant/historyGBEvariants/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_Mutect1.genes <- as.character(missense.with_Mutect1$V1)
missense.with_Mutect2 <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_Mutect2.genes <- as.character(missense.with_Mutect2$V1)
source("x:/R-project/customPackages/plotTools.R")
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
grid.draw(VennDiagram$figure)
libary(affy)
library(affy)
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
grid.draw(VennDiagram$figure)
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
source("x:/R-project/customPackages/arraySeqTools.R")
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
source("x:/R-project/customPackages/dataManipTools.R")
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
grid.draw(VennDiagram$figure)
VennDiagram <- draw.four.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,
missense.with_MergedNormal.genes, missense.with_Mutect2.genes,
"Mutect1",  "SingleNormal",  "MergedNormal",  "NoNormal")
grid.draw(VennDiagram$figure)
missense.with_SingleNormal <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/with_MergedNormals/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_SingleNormal.genes <- as.character(missense.with_SingleNormal$V1)
missense.with_MergedNormal <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/callingAgainstMergeNormals/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_MergedNormal.genes <- as.character(missense.with_MergedNormal$V1)
missense.with_Mutect1 <- read.table ("X:/project2020/exomeSeq/shareDataWIllumina/examineVariant/historyGBEvariants/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_Mutect1.genes <- as.character(missense.with_Mutect1$V1)
missense.with_Mutect2 <- read.table ("X:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/SnpEff/MisSenseGeneFreq.txt", sep =" ")
missense.with_Mutect2.genes <- as.character(missense.with_Mutect2$V1)
intersect(missense.with_MergedNormal.genes, missense.with_SingleNormal.genes )
source("x:/R-project/customPackages/dataManipTools.R")
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
source("x:/R-project/customPackages/plotTools.R")
VennDiagram <- draw.three.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,missense.with_MergedNormal.genes ,"Mutect1",  "SingleNormal",  "MergedNormal")
grid.draw(VennDiagram$figure)
VennDiagram <- draw.four.list.venndigram(missense.with_Mutect1.genes, missense.with_SingleNormal.genes  ,
missense.with_MergedNormal.genes, missense.with_Mutect2.genes,
"Mutect1",  "SingleNormal",  "MergedNormal",  "NoNormal")
grid.draw(VennDiagram$figure)
missense.mergedGBE_Mutect2 <- read.table ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_missense_genes.txt", sep =" ")
missense.mergedGBE.genes <- as.character(missense.mergedGBE_Mutect2$V1)
missense.mergedGBE.genes
missense.mergedGBE_Mutect2 <- read.table ("X:/project2020/exomeSeq/analysis4GBE/mergeFiles/GBE_merged_missense_genes.txt", sep =" ")
missense.mergedGBE.genes <- as.character(missense.mergedGBE_Mutect2$V1)
VennDiagram <- draw.four.list.venndigram(missense.with_Mutect1.genes, missense.mergedGBE.genes  ,
missense.with_MergedNormal.genes, missense.with_Mutect2.genes,
"Mutect1",  "MergedTumor",  "MergedNormal",  "NoNormal")
grid.draw(VennDiagram$figure)
131+21+4+48
intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes)
sort(intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes))
intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes))
write.table (intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes), file = "X:/project2020/exomeSeq/analysis4GBE/common_gene_204.txt", row.names = FALSE,sep ="\t")
write.table (intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes)), file = "X:/project2020/exomeSeq/analysis4GBE/common_gene_3way_25.txt", row.names = FALSE,sep ="\t")
missense.mergedGBE.genes %in% intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes))
missense.mergedGBE.genes [-which(missense.mergedGBE.genes %in% intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes)))]
length(missense.mergedGBE.genes [-which(missense.mergedGBE.genes %in% intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes)))])
write.table (missense.mergedGBE.genes [-which(missense.mergedGBE.genes %in% intersect( missense.mergedGBE.genes,intersect( missense.with_MergedNormal.genes, missense.with_Mutect2.genes)))],
file = "X:/project2020/exomeSeq/analysis4GBE/uniq_gene_mergedTumor_13.txt", row.names = FALSE,sep ="\t")
library(GEOquery)
library(limma)
# load series and platform data from GEO
gset <- getGEO("GSE36133", GSEMatrix =TRUE, AnnotGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL15308", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# group names for all samples
gsms <- paste0("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXX1XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXX1111111111XXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00XXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXX11111X11X111XXXXXXXXXX1XXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXX")
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# log2 transform
ex <- exprs(gset)
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0) ||
(qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)
if (LogC) { ex[which(ex <= 0)] <- NaN
exprs(gset) <- log2(ex) }
# set up the data and proceed with analysis
sml <- paste("G", sml, sep="")    # set group names
fl <- as.factor(sml)
gset$description <- fl
design <- model.matrix(~ description + 0, gset)
colnames(design) <- levels(fl)
fit <- lmFit(gset, design)
cont.matrix <- makeContrasts(G1-G0, levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=250)
tT <- subset(tT, select=c("ID","adj.P.Val","P.Value","t","B","logFC","ORF"))
head(tT)
fl <- as.factor(sml)
labels <- c("SSCC","others")
# set parameters and draw the plot
palette(c("#f4dff4","#dff4e4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
save(tT, file= "x:/project2020/MustARD/ESCC/workingWithMicroarray_GSE36133_CCLE/ESCC_GSE36133_limma_SSCC_vs_others.rda")
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("SSCC","others")
# set parameters and draw the plot
palette(c("#f4dff4","#dff4e4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
labels <- c("others", "SSCC")
# set parameters and draw the plot
palette(c("#f4dff4","#dff4e4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
save(ex, file= "x:/project2020/MustARD/ESCC/workingWithMicroarray_GSE36133_CCLE/ESCC_GSE36133.rda")
head(tT)
length(tT$adj.P.Val < 0.05)
length(tT$adj.P.Val < 0.05 & |tT$logFC| >=2)
length(tT$adj.P.Val < 0.05 & abs(tT$logFC) >=2)
#================================================================
library(Biobase)
library(GEOquery)
# load series and platform data from GEO
gset <- getGEO("GSE36133", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL15308", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# group names for all samples in a series
gsms <- paste0("XXXXXXXXXXXXXXXXXXXXXXX3XX3XXXXXXXXXXXXXXXX4XXXXXX",
"XXXXXXXXXXXXXXXXXXXX3XXXXXXXX504XXXXXXXXXX4XXXXXXX",
"XXXXXXX1XXX0XXXXXXXX0211111XXXXX1XXXXXXXXXXXX11111",
"1XXXX0XX5XXXXXXXXXXXXX5XXXXXXXXXXXXXXXXXXXXXXXX5X3",
"X4XXXXXX5XXXXXX0314X00XX005XXXXXXXXXXXXXXXXXXXXXXX",
"5XXXXXXX0XXXXXXXXXX0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXX2XXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX5XXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXX522X5XXXXX5XXXXXXXX325",
"0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXX0XXXXXXXXXX11121311005031010302100404010004031",
"3512131130013X1100133100151311051000303XX04012X153",
"11444X21X4X213101XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXXXXX3XXXXXXXXXXXXXXXXXXXXXXXXXX005",
"335XXXXXXXXXXXXXXXXXX1XXXXX1XXXXXX1XXXXXXXXXX0XXXX",
"XXXXX5XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXX5XXXXXXXXXXXXXXXXX1XXX5XXXXXXXXXX5XXXX",
"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
"XXXXXXXXXXXXXXXXX")
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
sml <- paste("G", sml, sep="")  # set group names
# eliminate samples marked as "X"
sel <- which(sml != "GX")
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
table(fl)
labels <- c("ADC","ADSC","LCC","NSCLC","Others","SCC")
# set parameters and draw the plot
palette(c("#dfeaf4","#f4dfdf","#f2cb98","#dcdaa5","#dff4e4","#f4dff4", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE36133", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
library(rvest)
url <- "http://www.tripadvisor.com/Hotel_Review-g37209-d1762915-Reviews-JW_Marriott_Indianapolis-Indianapolis_Indiana.html"
reviews <- url %>%
read_html() %>%
html_nodes("#REVIEWS .innerBubble")
id <- reviews %>%
html_node(".quote a") %>%
html_attr("id")
quote <- reviews %>%
html_node(".quote span") %>%
html_text()
rating <- reviews %>%
html_node(".rating .rating_s_fill") %>%
html_attr("alt") %>%
gsub(" of 5 stars", "", .) %>%
as.integer()
date <- reviews %>%
html_node(".rating .ratingDate") %>%
html_attr("title") %>%
strptime("%b %d, %Y") %>%
as.POSIXct()
review <- reviews %>%
html_node(".entry .partial_entry") %>%
html_text()
data.frame(id, quote, rating, date, review, stringsAsFactors = FALSE) %>% View()
##      fileExt : fileExtension
##==================================================
library(BSgenome)
ref_genome <-  "BSgenome.Mmusculus.UCSC.mm10"
library(ref_genome, character.only = TRUE)
library(MutationalPatterns)
##===================================================================================================
##  Mutect2 calls
##
##===================================================================================================
fileExt  = "_finalSNV.vcf"
inputDir = "x:/project2018/NTP_exome_project/ReAnalyzeEffort/Mutect2Dir/GATK4/by_chemicals/gtx/GINKGO/_3nMore/MutSig/"
vcf_files <- list.files(inputDir, pattern = fileExt , full.names = TRUE)
sample_names <-  gsub (fileExt , "", gsub (paste (inputDir, "Sample_", sep="") , "", vcf_files))
vcfs <- read_vcfs_as_granges(vcf_files, sample_names, ref_genome)
mut_mat <- mut_matrix(vcf_list = vcfs, ref_genome = ref_genome)
spectrumDT <- list (f = vcfs, dat = mut_mat)
plot_96_profile(mut_mat)
colSums(mut_mat)
2500/10
shiny::runApp('X:/project2019/SEM/shinyRelated/NewBootstrap')
