axis(1, labels=colnames(dat), at=1:ncol(dat))
for(i in 1:ncol(dat)) {
## Get i-th column
p <- dat[,i]
## Remove 0 values from column
p <- p[! p %in% 0]
## Instead of 0 you can use any values
## For example, you can remove 1, 2, 3
##   p <- p[! p %in% c(1,2,3)]
## Draw boxplot
boxplot(p, add=T, at=i)
}
str(dat)
dat$SpikeMisSense
is.na(dat$SpikeMisSense)
dat$SpikeMisSense[-is.na(dat$SpikeMisSense)]
dat$SpikeMisSense[-which(is.na(dat$SpikeMisSense))]
summary(dat$SpikeMisSense[-which(is.na(dat$SpikeMisSense))])
##=============================
##  summary
##===============================
str(dat)
dt[,1]
dat[,1]
dat[,k]
k = 1
dat[,k]
which(is.na(dat[,k])
)
for (k in dim(dat)[2])
{
summary(dat[,k][-which(is.na(dat[,k]))])
}
for (k in dim(dat)[2])
{
print(summary(dat[,k][-which(is.na(dat[,k]))]))
}
k
k=1
print(summary(dat[,k][-which(is.na(dat[,k]))]))
summary(dat[,k][-which(is.na(dat[,k]))])
is.na(dat[,k])
k = 2
print(summary(dat[,k][-which(is.na(dat[,k]))]))
k = 3
print(summary(dat[,k][-which(is.na(dat[,k]))]))
k = 1
print(summary(dat[,k][-which(is.na(dat[,k]))]))
k = 4
print(summary(dat[,k][-which(is.na(dat[,k]))]))
summary(dat[,1])
load("x:/project2018/Diagram_Wu/meeting_04242018/parsedNewDT.rda")
dim(NewDT)
colnames(NewDT)
load ("x:/project2018/Diagram_Wu/meeting_05082018/parsedCellReportDT.rda")
head(CellReportDT)
colnames(CellReportDT)
# Write lavaan code for this single equation model
mod1 <- 'P4_act ~ BCL6 + PGR_act'
cor.test(test.model [,4], test.model [,7])
##  part II
head(CellReportDT)
SEM.improvment <- NULL
index = 0
for (aGene in colnames(NewDT)){
col <- which(colnames(NewDT) %in% aGene )
test.model <- cbind(CellReportDT, NewDT[,col])
colnames(test.model)[7] <- aGene
eval(parse(text=paste0("mod <- '",colnames(test.model)[6], " ~ " , colnames(test.model)[7] , " + " , colnames(test.model)[4], " '")))
pval <- gettingPval (mod, test.model)
results.list <- list (GeneName = aGene, Pvalue = pval)
SEM.improvment <- rbind (SEM.improvment, unlist(results.list))
}
gettingPval <- function (mod, dt, varOfInterest = 2)
{
require(lavaan)
mod.fit <- sem (mod, data = dt)
z.test <- mod.fit@ParTable$est[varOfInterest]/mod.fit@ParTable$se[varOfInterest]
return (2*(1-pnorm(abs(z.test))))
}
plotPvalText <- function (pvalResults, title)
{
color = rep ("green", length(pvalResults[,2]))
color[which( pvalResults[,1] %in%  head(pvalResults[ order(as.numeric(pvalResults[,2])),1],10))] = "red"
color [(which(as.numeric(pvalResults[,2]) > 0.05))] = "black"
plot(-log(as.numeric(pvalResults[,2])), ylab  = "Negative LogPvalue",
main = title, type = 'n')
text(-log(as.numeric(pvalResults[,2])), pvalResults[,1], cex = 0.7, col = color)
}
plotPvalTextDown <- function (pvalResults, title)
{
pvalResults = SEM.improvment
title = "GATA2 activity significance in SEM model"
}
plotPvalText (SEM.improvment, "PGR activity significance in SEM model")
head(CellReportDT)
SEM.improvment <- NULL
index = 0
for (aGene in colnames(NewDT)){
col <- which(colnames(NewDT) %in% aGene )
test.model <- cbind(CellReportDT, NewDT[,col])
colnames(test.model)[7] <- aGene
eval(parse(text=paste0("mod <- '",colnames(test.model)[6], " ~ " , colnames(test.model)[7] , " + " , colnames(test.model)[4], " '")))
pval <- gettingPval (mod, test.model)
results.list <- list (GeneName = aGene, Pvalue = pval)
SEM.improvment <- rbind (SEM.improvment, unlist(results.list))
}
plotPvalText (SEM.improvment, "PGR activity significance in SEM model")
SEM.improvment <- NULL
index = 0
for (aGene in colnames(NewDT)){
col <- which(colnames(NewDT) %in% aGene )
test.model <- cbind(CellReportDT, NewDT[,col])
colnames(test.model)[7] <- aGene
eval(parse(text=paste0("mod <- '",colnames(test.model)[3], " ~ " , colnames(test.model)[7] , " + " , colnames(test.model)[2], " '")))
pval <- gettingPval (mod, test.model)
results.list <- list (GeneName = aGene, Pvalue = pval)
SEM.improvment <- rbind (SEM.improvment, unlist(results.list))
}
plotPvalText (SEM.improvment, "GATA2 expression level replaced in SEM model")
mtext("SOX17 as the endpoint")
load ("X:/project2019/SEM/data/new_t_scores_w_lev.rda")
##  cell report paper figure 6D
mod1 <- 'SOX17_lev ~ GATA2_act_FC13_P01 + PRG_act_FC13_P01'
cor.test(dat [,5], dat [,12])
mod1.fit <- sem(mod1, data=dat )
summary(mod1.fit, rsq=T)
load ("X:/project2019/SEM/data/new_t_scores_w_lev_03272019.rda")
##  cell report paper figure 6D
mod1 <- 'SOX17_lev ~ GATA2_act_FC13_P01 + PRG_act_FC13_P01'
cor.test(dat [,5], dat [,12])
mod1.fit <- sem(mod1, data=dat )
summary(mod1.fit,  fit.measures=TRUE)
?cor.test
x <- dnorm(10)
x
x <- rep (dnorm(10), 10)
x
y <- rep (dnorm(5), 10)
cor.test(x,y)
y
cor(x,y)
cor.test(as.data.frame(x,y))
as.data.frame(x,y)
cor.test(as.data.frame(c(x,y)))
cor.test(as.data.frame(cbind(x,y)))
x <- rep (dnorm(10), 10)
y <- rep (dnorm(5), 10)
cor.test(as.data.frame(cbind(x,y)))
cbind(x,y)
(as.data.frame(cbind(x,y)))
##==================================
##  All work out as expected!!
##==================================
library(dndscv)
##=================================
##  Sanger lung tumor samples
##=================================
Sanger.lungTumor <- read.table ("x:/project2019/exomSeqHCC/SangerWGS/Mutect2/WGS_callDir/MD5333a_MD5345a.table", header = TRUE, sep = "\t")
dim(Sanger.lungTumor )
str(Sanger.lungTumor )
Sanger.lungTumor$sampleID <- as.character(Sanger.lungTumor$sampleID)
Sanger.lungTumor$chr <- as.character(Sanger.lungTumor$chr)
Sanger.lungTumor$ref <- as.character(Sanger.lungTumor$ref)
Sanger.lungTumor$mut <- as.character(Sanger.lungTumor$mut)
dndsout = dndscv(Sanger.lungTumor, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
Sanger.WGS.Laura <- read.table ("x:/project2019/exomSeqHCC/Comm_w_Laura/laura_results/mutation_Sanger_by_Laura_4_dNdScv.txt", header = TRUE, sep = "\t")
dim(Sanger.WGS.Laura )
str(Sanger.WGS.Laura )
Sanger.WGS.Laura$sampleID <- as.character(Sanger.WGS.Laura$sampleID)
Sanger.WGS.Laura$chr <- as.character(Sanger.WGS.Laura$chr)
Sanger.WGS.Laura$ref <- as.character(Sanger.WGS.Laura$ref)
Sanger.WGS.Laura$mut <- as.character(Sanger.WGS.Laura$mut)
str(Sanger.WGS.Laura )
Sanger.WGS.Laura$sampleID <- as.character(Sanger.WGS.Laura$sampleID)
as.character(Sanger.WGS.Laura$sampleID)
Sanger.WGS.Laura$sampleID
dim(Sanger.WGS.Laura )
str(Sanger.WGS.Laura )
Sanger.WGS.Laura <- read.table ("x:/project2019/exomSeqHCC/Comm_w_Laura/laura_results/mutation_Sanger_by_Laura_4_dNdScv.txt", header = TRUE, sep = "\t")
dim(Sanger.WGS.Laura )
str(Sanger.WGS.Laura )
Sanger.WGS.Laura$sampleID <- as.character(Sanger.WGS.Laura$sampleID)
Sanger.WGS.Laura$chr <- as.character(Sanger.WGS.Laura$chr)
Sanger.WGS.Laura$ref <- as.character(Sanger.WGS.Laura$ref)
Sanger.WGS.Laura$mut <- as.character(Sanger.WGS.Laura$mut)
dndsout = dndscv(Sanger.WGS.Laura, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
sel_cv = dndsout$sel_cv
print(head(sel_cv, 50), digits = 3)
print(head(sel_cv, 5), digits = 3)
print(head(sel_cv, 10), digits = 3)
print(dndsout2$globaldnds)
print(dndsout$globaldnds)
str(Sanger.WGS.Laura )
Sanger.WGS.Laura$sampleID
which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a"))
Sanger.WGS.Laura[which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a")),]
Sanger.WGS.Laura.lung <- Sanger.WGS.Laura[which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a")),]
dndsout = dndscv(Sanger.WGS.Laura.lunga, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
sel_cv = dndsout$sel_cv
print(head(sel_cv, 10), digits = 3)
print(dndsout$globaldnds)
Sanger.WGS.Laura.lung <- Sanger.WGS.Laura[which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a")),]
dndsout = dndscv(Sanger.WGS.Laura.lunga, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
sel_cv = dndsout$sel_cv
print(head(sel_cv, 10), digits = 3)
print(dndsout$globaldnds)
Sanger.WGS.Laura.lung <- Sanger.WGS.Laura[which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a")),]
dndsout = dndscv(Sanger.WGS.Laura.lung, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
sel_cv = dndsout$sel_cv
print(head(sel_cv, 10), digits = 3)
print(dndsout$globaldnds)
Sanger.WGS.Laura.liver <- Sanger.WGS.Laura[- which(Sanger.WGS.Laura$sampleID%in%c("MD5333a","MD5345a")),]
dndsout = dndscv(Sanger.WGS.Laura.liver, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
sel_cv = dndsout$sel_cv
print(head(sel_cv, 10), digits = 3)
print(dndsout$globaldnds)
genes_with_mutations = unique(dndsout$annotmuts$gene)
genes_with_mutations = unique(dndsout$annotmuts$gene)
genes_with_mutations
dndsout = dndscv(Sanger.WGS.Laura.lung, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
dndsout = dndscv(Sanger.WGS.Laura.lung, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL,  gene_list=genes_with_mutations)
genes_with_mutations
dim(Sanger.WGS.Laura.live)
dim(Sanger.WGS.Laura.liver)
dim(Sanger.WGS.Laura)
dim(Sanger.WGS.Laura.lung)
dndsout = dndscv(Sanger.WGS.Laura, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
##=================================
##  Sanger lung tumor samples
##=================================
Sanger.lungTumor <- read.table ("x:/project2019/exomSeqHCC/SangerWGS/Mutect2/WGS_callDir/MD5333a_MD5345a.table", header = TRUE, sep = "\t")
dim(Sanger.lungTumor )
str(Sanger.lungTumor )
Sanger.lungTumor$sampleID <- as.character(Sanger.lungTumor$sampleID)
Sanger.lungTumor$chr <- as.character(Sanger.lungTumor$chr)
Sanger.lungTumor$ref <- as.character(Sanger.lungTumor$ref)
Sanger.lungTumor$mut <- as.character(Sanger.lungTumor$mut)
dndsout = dndscv(Sanger.lungTumor, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
genes_with_mutations = unique(dndsout$annotmuts$gene)
genes_with_mutations
##  Model within Genes
dndsout2 = dndscv(GBE.3nMore, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL, gene_list=genes_with_mutations)
##  Model within Genes
dndsout2 = dndscv(Sanger.lungTumor, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL, gene_list=genes_with_mutations)
sel_cv = dndsout2$sel_cv
print(head(sel_cv, 50), digits = 3)
print(dndsout2$globaldnds)
dim(Sanger.lungTumor )
Sanger.liverTumor <- read.table ("x:/project2019/exomSeqHCC/SangerWGS/Mutect2/WGS_callDir/MD5908a_MD5736a.table", header = TRUE, sep = "\t")
Sanger.liverTumor <- read.table ("x:/project2019/exomSeqHCC/SangerWGS/Mutect2/WGS_callDir/MD5908a_MD5736a.table", header = TRUE, sep = "\t")
dim(Sanger.liverTumor )
str(Sanger.liverTumor )
Sanger.liverTumor$sampleID <- as.character(Sanger.liverTumor$sampleID)
Sanger.liverTumor$chr <- as.character(Sanger.liverTumor$chr)
Sanger.liverTumor$ref <- as.character(Sanger.liverTumor$ref)
Sanger.liverTumor$mut <- as.character(Sanger.liverTumor$mut)
dndsout = dndscv(Sanger.liverTumor, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
dndsout = dndscv(Sanger.WGS.Laura.liver, refdb = "x:/project2019/exomSeqHCC/driverGene/for_dndscv/RefCDS_mouse_GRCm38.p2.rda", cv = NULL)
286/200
pon1 <- c(85,
66,
88,
100,
99,
100,
87,
105,
79,
85
)
pon2 <- c(99,
88,
99,
142,
118,
130,
111,
142,
107,
97
)
pon3 <- c(114,
112,
115,
180,
134,
138,
145,
171,
132,
123
)
pon5 <- c(150,
151,
165,
251,
195,
202,
214,
227,
178,
183
)
snv <- cbind (pon1,pon2,pon3,pon5)
snv
library(reshape2)
df2 <- melt(snv)
colnames(df2) <- c("Rep", "PON", "CNT")
boxplot(
formula = CNT ~ PON,
data    = df2,
boxwex  = 0.25,
at      = 1:4 - 0.2,
#  subset  = Type == "Rep",
col     = "yellow",
main    = "Number of SNV calls",
xlab    = "x",
ylab    = "y",
ylim    = c( 0, ceiling( max( df2$CNT ) ) + 1 ),
yaxs    = "i" )
snv
dt <- read.csv ("X:/project2017/SEQC2_TGSWG2/WES4/doc/snv-rd-dist.csv")
str(dt)
df2 <- melt(dt)
df2
dt <- read.csv ("X:/project2017/SEQC2_TGSWG2/WES4/doc/snv-rd-dist.csv")
df2 <- melt(dt)
df2
str(dt)
dt <- read.csv ("X:/project2017/SEQC2_TGSWG2/WES4/doc/snv-rd-dist.csv")
str(dt)
df2 <- melt(dt)
colnames(df2)
colnames(df2) <- c("Rep", "PON", "CNT")
boxplot(
formula = CNT ~ PON,
data    = df2,
boxwex  = 0.25,
at      = 1:4 - 0.2,
#  subset  = Type == "Rep",
col     = "yellow",
main    = "Number of SNV calls",
xlab    = "x",
ylab    = "y",
ylim    = c( 0, ceiling( max( df2$CNT ) ) + 1 ),
yaxs    = "i" )
boxplot(
formula = CNT ~ PON,
data    = df2,
#  boxwex  = 0.25,
#  at      = 1:4 - 0.2,
#  subset  = Type == "Rep",
col     = "yellow",
main    = "Number of SNV calls",
xlab    = "x",
ylab    = "y",
ylim    = c( 0, ceiling( max( df2$CNT ) ) + 1 ),
yaxs    = "i" )
summary(dt)
boxplot(
formula = CNT ~ PON,
data    = df2,
#  boxwex  = 0.25,
#  at      = 1:4 - 0.2,
#  subset  = Type == "Rep",
col     = "yellow",
main    = "Number of SNV calls",
xlab    = "Category",
ylab    = "SNV count",
ylim    = c( 0, ceiling( max( df2$CNT ) ) + 1 ),
yaxs    = "i" )
mtext("WES4 Mutect2 without matched normal")
boxplot(
formula = CNT ~ PON,
data    = df2,
#  boxwex  = 0.25,
#  at      = 1:4 - 0.2,
#  subset  = Type == "Rep",
col     = "yellow",
main    = "SNV count distribution cross samples",
xlab    = "Category",
ylab    = "SNV count",
ylim    = c( 0, ceiling( max( df2$CNT ) ) + 1 ),
yaxs    = "i" )
mtext("WES4 Mutect2 without matched normal")
24.99*24
source ("x:/project2019/SEM/rScripts/helpScripts/SEM_util.R")
library("lavaan")
source ("X:/project2015/DieselWes/Rscripts/dmPairs.R")
library(RColorBrewer)
14437088/46347343
170938/46347343
1931142-171543
69134- 68928
chr1    69212   69810
69810 - 69212
20981181/49680799
testP (as.numeric(ATF4.p[1]) , dt$GATA2)
testP (as.numeric(ATF4.p[2]) , dt$PGR)
##===================================
##  Meeting ends: 03272019
##===================================
profile.plot <- function (dt, fig.title, fig.subtitle = "", plot.colors, legPost = "topleft")
{
lgd <- colnames(dt)
plotDensity (dt, main = fig.title, xlab = "Negative log (10) of pvalues", ylab= "Density"  , type="n")
mtext (fig.subtitle)
for (i in 1:length(plot.colors))
{
lines(density(dt[,i]), col=plot.colors[i], lty=2)
}
legend (legPost,lgd, text.col = plot.colors, lty = c(rep(1,12)), col =  plot.colors)    #PGR
}
##===================================
##  Meeting starts: 06242019
##===================================
source ("x:/project2019/SEM/rScripts/helpScripts/SEM_util.R")
library("lavaan")
library(RColorBrewer)
library(affy)
library("lavaan")
##===================================
##  Meeting ends: 03272019
##===================================
profile.plot <- function (dt, fig.title, fig.subtitle = "", plot.colors, legPost = "topleft")
{
lgd <- colnames(dt)
plotDensity (dt, main = fig.title, xlab = "Negative log (10) of pvalues", ylab= "Density"  , type="n")
mtext (fig.subtitle)
for (i in 1:length(plot.colors))
{
lines(density(dt[,i]), col=plot.colors[i], lty=2)
}
legend (legPost,lgd, text.col = plot.colors, lty = c(rep(1,12)), col =  plot.colors)    #PGR
}
##===================================
##  Meeting starts: 06242019
##===================================
source ("x:/project2019/SEM/rScripts/helpScripts/SEM_util.R")
library("lavaan")
library(RColorBrewer)
library(affy)
library("lavaan")
library(RColorBrewer)
library(affy)
27145*.9
27349*.9
583+968+874
2425/34
2425/36
583+968+874+600
3025/36
shiny::runApp('X:/project2019/SEM/shinyRelated/NewBootstrap')
##==================================
##  All work out as expected!!
##==================================
library(dndscv)
sessionINfo()
sessionInfo()
shiny::runApp('X:/project2019/SEM/shinyRelated/NewBootstrap')
setwd("x:/project2019/SEM/shinyRelated/Bootstrap/")
library(readxl)
library(tidyr)
library(stringr)
#setwd("C:/Users/dayk2/Desktop/Bootstrap/CSVs")
MasterSig <- read_excel("Human Sig.xlsx")
HumanArray <- read_excel("Human Array.xlsx")
colnames(HumanArray)[1]
colnames(HumanArray)[1]<-"Gene"
names <- c("ATF4","beta-estradiol","EGFR", "ERN1","FOXO3","HOXA10","MITF","progesterone","PTEN","RUNX3","TGFBR1","Vegf","XBP1")
targets <- c(34,289,73,31,62,39,27,124,83,20,14,72,45)
for (reg in 1:13){
cName <- names[reg]
targetNumber <- targets[reg]
TScores <- matrix(0,nrow=1000,ncol=length(HumanArray)-1)
for(i in 1:nrow(TScores)){
TScores[i,1] <- paste0("Random_",cName,"_",targetNumber,"_",str_pad(i, 4, pad = "0")) #Random_34_0001
set.seed(1+i*100+reg)
eliminateRandoms <- sample.int(nrow(MasterSig),targetNumber)
subSet <- MasterSig[-eliminateRandoms,]
a <-subSet[!duplicated(subSet[,1]),]
colnames(a)[1]<-"Human"
a$Human[a$Human == "?"] <- NA
a<-na.omit(a)
a<-a[order(a$Human),]
a$Human <- toupper(a$Human)
HumanArray$Gene <- toupper(HumanArray$Gene)
overlap <- intersect(a$Human,HumanArray$Gene)
a <- a[a$Human %in% overlap,] # get rid of non-overlaps
ArrayDummy <- HumanArray[HumanArray$Gene %in% overlap,]
ArrayDummy<-ArrayDummy[order(ArrayDummy$Gene),]
final <- merge(a, ArrayDummy, by.x="Human", by.y="Gene")
final[4:length(final)] <- lapply(final[4:length(final)], as.numeric)
HighLow <- split(final, final$Signature)
High <- HighLow$High
Low <- HighLow$Low
for(j in 1:(ncol(TScores)-1)){
TScores[i,j+1]<- t.test(High[j+3],Low[j+3], alternative="two.sided", paired =FALSE, var.equal=TRUE)$statistic
}
}
colnames(TScores)[2:ncol(TScores)] <- colnames(final)[4:ncol(final)]
colnames(TScores)[1] <- "Run"
filePath <- paste0(cName,"_",targetNumber,".csv")
write.csv(TScores,filePath,row.names=F)
}
